# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'mainui.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.



import sys
import time

from PyQt5.QtCore import Qt, QTimer,QThread
from PyQt5.QtGui import QBrush, QColor, QPalette
from PyQt5.QtWidgets import QApplication, qApp

from qroundprogressbar import QRoundProgressBar
from threading import Timer
import threading
import time
import datetime

from PyQt5 import QtCore, QtGui, QtWidgets
from random import random

import matplotlib
matplotlib.use('Qt5Agg')
from matplotlib.backends.backend_qt5agg import FigureCanvasQTAgg
from matplotlib.backends.backend_qt5agg import FigureCanvasQTAgg, NavigationToolbar2QT as NavigationToolbar
from matplotlib.figure import Figure

import random
from PyQt5.QtGui import QIcon
from loginscreen import Ui_LoginWindow
import webbrowser


stop_threads = True
class MplCanvas(FigureCanvasQTAgg):

    def __init__(self, parent=None, width=5, height=4, dpi=100):
        fig = Figure(figsize=(width, height), dpi=dpi)
        fig.set_facecolor('#121212')
        self.axes = fig.add_subplot(111)
        self.axes.set_facecolor('#121212')
        self.axes.tick_params(color='white', labelcolor='white')
        for spine in self.axes.spines.values():
            spine.set_edgecolor('white')

        super(MplCanvas, self).__init__(fig)

    def clear(self):
        self.axes.cla()

class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        # declare thread
        global stop_threads
        self.t1 = threading.Thread(target = run, args =(lambda : stop_threads, ))
        self.t1.daemon = True
        self.t1.start()
        #main frame
        MainWindow.setObjectName("MainWindow")
        MainWindow.setEnabled(True)
        MainWindow.setFixedSize(1060, 766)
        MainWindow.setStyleSheet("background-color: #1f1b24;")
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        
        self.groupBox = QtWidgets.QGroupBox(self.centralwidget)
        self.groupBox.setGeometry(QtCore.QRect(50, 40, 441, 311))
        self.groupBox.setStyleSheet("\n"
"background-color: #121212;\n"
"border-radius:30px;\n"
"border : 0px;\n"
"")
        self.groupBox.setTitle("")
        self.groupBox.setObjectName("groupBox")
        self.gridLayoutWidget = QtWidgets.QWidget(self.groupBox)
        self.gridLayoutWidget.setGeometry(QtCore.QRect(19, 19, 401, 271))
        self.gridLayoutWidget.setObjectName("gridLayoutWidget")
        self.gridLayout = QtWidgets.QGridLayout(self.gridLayoutWidget)
        self.gridLayout.setContentsMargins(0, 0, 0, 0)
        self.gridLayout.setObjectName("gridLayout")
        self.groupBox_3 = QtWidgets.QGroupBox(self.centralwidget)
        self.groupBox_3.setGeometry(QtCore.QRect(50, 460, 441, 221))
        self.groupBox_3.setStyleSheet("QGroupBox{\n"
"background-color: #121212;\n"
"border-radius:30px;\n"
"border : 0px;\n"
"\n"
"}")
        self.groupBox_3.setTitle("")
        self.groupBox_3.setObjectName("groupBox_3")

        #maual button creation
        self.pushButton = QtWidgets.QPushButton(self.groupBox_3)
        self.pushButton.clicked.connect(self.automaticButton)
        self.pushButton.setEnabled(True)
        self.pushButton.setGeometry(QtCore.QRect(30, 60, 131, 41))
        font = QtGui.QFont()
        font.setPointSize(14)
        self.pushButton.setFont(font)
        self.pushButton.setStyleSheet("QPushButton{\n"
"background-color: #1f1b24;\n"
"border-radius:15px;\n"
"border-style: outset;\n"
"border-width:1px;\n"
"border-color:#915bde;\n"
"color: white;\n"
"\n"
"}\n"
"QPushButton:disabled {\n"
"color:black;\n"
"background-color: #915bde;\n"
"}")

        
        self.pushButton.setObjectName("pushButton")

        #automatic button creation
        self.pushButton_2 = QtWidgets.QPushButton(self.groupBox_3)
        self.pushButton_2.clicked.connect(self.manualButton)
        self.pushButton_2.setEnabled(False)
        self.pushButton_2.setGeometry(QtCore.QRect(30, 130, 131, 41))
        font = QtGui.QFont()
        font.setPointSize(14)
        self.pushButton_2.setFont(font)
        self.pushButton_2.setStyleSheet("QPushButton{\n"
"background-color: #1f1b24;\n"
"border-radius:15px;\n"
"border-style: outset;\n"
"border-width:1px;\n"
"border-color:#915bde;\n"
"color: white;\n"
"\n"
"}\n"
"QPushButton:hover{\n"

"}\n"
"QPushButton:disabled {\n"
"color:black;\n"
"background-color: #915bde;\n"
"}")
        self.pushButton_2.setObjectName("pushButton_2")
        self.toolButton = QtWidgets.QToolButton(self.groupBox_3)
        self.toolButton.clicked.connect(self.rightArrow)
        self.toolButton.setEnabled(True)
        self.toolButton.setGeometry(QtCore.QRect(360, 90, 41, 41))
        self.toolButton.setStyleSheet("QToolButton{\n"
"background-color: #1f1b24;\n"
"border-style: outset;\n"
"border-width:1px;\n"
"border-color:#915bde;\n"
"color: white;\n"
"}\n"
"QToolButton:pressed{\n"
"background-color: #1f1b24;\n"
"border-style: outset;\n"
"border-width:1px;\n"
"border-color:white;\n"
"color: white;\n"
"}\n"
"QToolButton:disabled {\n"
"background-color: #121212;\n"
"border-width:1px;\n"
"border-color:#1f1b24;\n"
"}")
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap("right arrow.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        icon.addPixmap(QtGui.QPixmap("disabled arrow right.png"), QtGui.QIcon.Disabled, QtGui.QIcon.Off)
        self.toolButton.setIcon(icon)
        self.toolButton.setIconSize(QtCore.QSize(64, 64))
        self.toolButton.setObjectName("toolButton")
        self.toolButton_2 = QtWidgets.QToolButton(self.groupBox_3)
        self.toolButton_2.setEnabled(True)
        self.toolButton_2.setGeometry(QtCore.QRect(260, 90, 41, 41))
        self.toolButton_2.setStyleSheet("QToolButton{\n"
"background-color: #1f1b24;\n"
"border-style: outset;\n"
"border-width:1px;\n"
"border-color:#915bde;\n"
"color: white;\n"
"}\n"
"QToolButton:pressed{\n"
"background-color: #1f1b24;\n"
"border-style: outset;\n"
"border-width:1px;\n"
"border-color:white;\n"
"color: white;\n"
"}\n"
"QToolButton:disabled {\n"
"background-color: #121212;\n"
"border-width:1px;\n"
"border-color:#1f1b24;\n"
"}")
        icon1 = QtGui.QIcon()
        icon1.addPixmap(QtGui.QPixmap("left arrow.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        icon1.addPixmap(QtGui.QPixmap("disabled arrow left.png"), QtGui.QIcon.Disabled, QtGui.QIcon.Off)
        self.toolButton_2.setIcon(icon1)
        self.toolButton_2.clicked.connect(self.leftArrow)
        self.toolButton_2.setIconSize(QtCore.QSize(64, 64))
        self.toolButton_2.setObjectName("toolButton_2")
        self.toolButton_3 = QtWidgets.QToolButton(self.groupBox_3)
        self.toolButton_3.setEnabled(True)
        self.toolButton_3.setGeometry(QtCore.QRect(310, 30, 41, 41))
        self.toolButton_3.setStyleSheet("QToolButton{\n"
"background-color: #1f1b24;\n"
"border-style: outset;\n"
"border-width:1px;\n"
"border-color:#915bde;\n"
"color: white;\n"
"}\n"
"QToolButton:pressed{\n"
"background-color: #1f1b24;\n"
"border-style: outset;\n"
"border-width:1px;\n"
"border-color:white;\n"
"color: white;\n"
"}\n"
"QToolButton:disabled {\n"
"background-color: #121212;\n"
"border-width:1px;\n"
"border-color:#1f1b24;\n"
"}")
        icon2 = QtGui.QIcon()
        icon2.addPixmap(QtGui.QPixmap("top arrow.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        icon2.addPixmap(QtGui.QPixmap("disabled arrow top.png"), QtGui.QIcon.Disabled, QtGui.QIcon.Off)
        self.toolButton_3.setIcon(icon2)
        self.toolButton_3.clicked.connect(self.topArrow)
        self.toolButton_3.setIconSize(QtCore.QSize(64, 64))
        self.toolButton_3.setObjectName("toolButton_3")
        self.toolButton_4 = QtWidgets.QToolButton(self.groupBox_3)
        self.toolButton_4.setEnabled(True)
        self.toolButton_4.setGeometry(QtCore.QRect(310, 150, 41, 41))
        self.toolButton_4.setStyleSheet("QToolButton{\n"
"background-color: #1f1b24;\n"
"border-style: outset;\n"
"border-width:1px;\n"
"border-color:#915bde;\n"
"color: white;\n"
"}\n"
"QToolButton:pressed{\n"
"background-color: #1f1b24;\n"
"border-style: outset;\n"
"border-width:1px;\n"
"border-color:white;\n"
"color: white;\n"
"}\n"
"QToolButton:disabled {\n"
"background-color: #121212;\n"
"border-width:1px;\n"
"border-color:#1f1b24;\n"
"}")
        icon3 = QtGui.QIcon()
        icon3.addPixmap(QtGui.QPixmap("bottom arrow.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        icon3.addPixmap(QtGui.QPixmap("disabled arrow bottom.png"), QtGui.QIcon.Disabled, QtGui.QIcon.Off)
        self.toolButton_4.setIcon(icon3)
        self.toolButton_4.clicked.connect(self.downArrow)
        self.toolButton_4.setIconSize(QtCore.QSize(64, 64))
        self.toolButton_4.setObjectName("toolButton_4")
        self.groupBox_4 = QtWidgets.QGroupBox(self.centralwidget)
        self.groupBox_4.setGeometry(QtCore.QRect(540, 40, 491, 641))
        self.groupBox_4.setStyleSheet("\n"
"background-color: #121212;\n"
"border-radius:30px;\n"
"border : 0px;\n"
"")
        self.groupBox_4.setTitle("")
        self.groupBox_4.setObjectName("groupBox_4")
        self.verticalLayoutWidget = QtWidgets.QWidget(self.groupBox_4)
        self.verticalLayoutWidget.setGeometry(QtCore.QRect(29, 19, 441, 601))
        self.verticalLayoutWidget.setObjectName("verticalLayoutWidget")
        self.verticalLayout = QtWidgets.QVBoxLayout(self.verticalLayoutWidget)
        self.verticalLayout.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout.setObjectName("verticalLayout")
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 1060, 22))
        self.menubar.setStyleSheet("color:white;\n"
"background-color: #121212;\n"
"")
        self.menubar.setObjectName("menubar")
        self.menuCharts = QtWidgets.QMenu(self.menubar)
        self.menuCharts.setStyleSheet("color:white;")
        self.menuCharts.setObjectName("menuCharts")
        self.menuWeather = QtWidgets.QMenu(self.menubar)
        self.menuWeather.setStyleSheet("color:white;")
        self.menuWeather.setObjectName("menuWeather")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)
        self.actionrightarrow = QtWidgets.QAction(MainWindow)
        icon4 = QtGui.QIcon()
        icon4.addPixmap(QtGui.QPixmap("../../../../Downloads/Arrow.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionrightarrow.setIcon(icon4)
        self.actionrightarrow.setObjectName("actionrightarrow")
        self.actiontop_arrow = QtWidgets.QAction(MainWindow)
        icon5 = QtGui.QIcon()
        icon5.addPixmap(QtGui.QPixmap("../../../Pictures/top arrow.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actiontop_arrow.setIcon(icon5)
        self.actiontop_arrow.setObjectName("actiontop_arrow")
        self.actionWeather = QtWidgets.QAction(MainWindow)
        self.actionWeather.triggered.connect(self.weather)
        self.actionPower_Plot = QtWidgets.QAction(MainWindow)
        self.actionPower_Plot.setObjectName("actionPower_Plot")
        self.actionCurrent_Plot = QtWidgets.QAction(MainWindow)
        self.actionCurrent_Plot.setObjectName("actionCurrent_Plot")
        self.actionVoltage_Plot = QtWidgets.QAction(MainWindow)
        self.actionVoltage_Plot.setObjectName("actionVoltage_Plot")
        self.menuCharts.addAction(self.actionPower_Plot)
        self.menuCharts.addAction(self.actionCurrent_Plot)
        self.menuCharts.addAction(self.actionVoltage_Plot)
        self.menuWeather.addAction(self.actionWeather)
        self.menubar.addAction(self.menuCharts.menuAction())
        self.menubar.addAction(self.menuWeather.menuAction())




        #round progress bars
        self.progress = QRoundProgressBar()
        self.progress.setBarStyle(QRoundProgressBar.BarStyle.LINE)
        self.progress.setDecimals(1)
        self.progress.setFormat('%v')
        self.progress.setOutlinePenWidth(3)
        self.progress.setDataPenWidth(3)
        self.progress.setNullPosition(QRoundProgressBar.PositionBottom)
        self.progress.setRange(-40,40)
        self.progress.setValue(23)
        palette = QPalette()
        palette.setBrush(QPalette.AlternateBase, QColor('#121212'))
        palette.setBrush(QPalette.Highlight, QColor('#d4f542'))
        palette.setColor(QPalette.Text, Qt.white)
        self.progress.setPalette(palette)
        self.gridLayout.addWidget(self.progress,0,1)

        self.progress2 = QRoundProgressBar()
        self.progress2.setBarStyle(QRoundProgressBar.BarStyle.LINE)
        self.progress2.setDecimals(1)
        self.progress2.setFormat('%v')
        self.progress2.setOutlinePenWidth(3)
        self.progress2.setDataPenWidth(3)
        self.progress2.setNullPosition(QRoundProgressBar.PositionBottom)
        self.progress2.setRange(-40,40)
        self.progress2.setValue(21)
        palette2 = QPalette()
        palette2.setBrush(QPalette.AlternateBase, QColor('#121212'))
        palette2.setBrush(QPalette.Highlight, QColor('#42f5e3'))
        palette2.setColor(QPalette.Text, Qt.white)
        self.progress2.setPalette(palette2)
        self.gridLayout.addWidget(self.progress2,0,2)

        self.progress3 = QRoundProgressBar()
        self.progress3.setBarStyle(QRoundProgressBar.BarStyle.LINE)
        self.progress3.setDecimals(1)
        self.progress3.setFormat('%v')
        self.progress2.setOutlinePenWidth(3)
        self.progress3.setDataPenWidth(3)
        self.progress3.setNullPosition(QRoundProgressBar.PositionBottom)
        self.progress3.setRange(-40,40)
        self.progress3.setValue(15)
        palette3 = QPalette()
        palette3.setBrush(QPalette.AlternateBase, QColor('#121212'))
        palette3.setBrush(QPalette.Highlight, QColor('#7e42f5'))
        palette3.setColor(QPalette.Text, Qt.white)
        self.progress3.setPalette(palette3)
        self.gridLayout.addWidget(self.progress3,0,3)

        self.progress4 = QRoundProgressBar()
        self.progress4.setBarStyle(QRoundProgressBar.BarStyle.LINE)
        self.progress4.setDecimals(1)
        self.progress4.setFormat('%v')
        self.progress4.setOutlinePenWidth(3)
        self.progress4.setDataPenWidth(3)
        self.progress4.setNullPosition(QRoundProgressBar.PositionBottom)
        self.progress4.setRange(-40,40)
        self.progress4.setValue(-4)
        palette4 = QPalette()
        palette4.setBrush(QPalette.AlternateBase, QColor('#121212'))
        palette4.setBrush(QPalette.Highlight, QColor('#f542f2'))
        palette4.setColor(QPalette.Text, Qt.white)
        self.progress4.setPalette(palette4)
        self.gridLayout.addWidget(self.progress4,1,1)

        self.progress5 = QRoundProgressBar()
        self.progress5.setBarStyle(QRoundProgressBar.BarStyle.LINE)
        self.progress5.setDecimals(1)
        self.progress5.setFormat('%v')
        self.progress5.setOutlinePenWidth(3)
        self.progress5.setDataPenWidth(3)
        self.progress5.setNullPosition(QRoundProgressBar.PositionBottom)
        self.progress5.setRange(-40,40)
        self.progress5.setValue(-30)
        palette5 = QPalette()
        palette5.setBrush(QPalette.AlternateBase, QColor('#121212'))
        palette5.setBrush(QPalette.Highlight, QColor('#f5427e'))
        palette5.setColor(QPalette.Text, Qt.white)
        self.progress5.setPalette(palette5)
        self.gridLayout.addWidget(self.progress5,1,2)

        self.progress6 = QRoundProgressBar()
        self.progress6.setBarStyle(QRoundProgressBar.BarStyle.LINE)
        self.progress6.setDecimals(1)
        self.progress6.setFormat('%v')
        self.progress6.setOutlinePenWidth(3)
        self.progress6.setDataPenWidth(3)
        self.progress6.setNullPosition(QRoundProgressBar.PositionBottom)
        self.progress6.setRange(-40,40)
        self.progress6.setValue(35)
        palette6 = QPalette()
        palette6.setBrush(QPalette.AlternateBase, QColor('#121212'))
        palette6.setBrush(QPalette.Highlight, QColor('#f57e42'))
        palette6.setColor(QPalette.Text, Qt.white)
        self.progress6.setPalette(palette6)
        self.gridLayout.addWidget(self.progress6,1,3)




        #Plots
        self.canvas = MplCanvas(self, width=5, height=4, dpi=100)
        self.n_data = 0
        self.xdata = list(range(self.n_data))
        self.ydata = [random.randint(8, 12) for i in range(self.n_data)]
        self.update_plot()
        self.update_plot()
        self.update_plot()
        self.update_plot()
        self.update_plot()
        self.update_plot()
        self.update_plot()
        self.update_plot()

        self.canvas2 = MplCanvas(self, width=5, height=4, dpi=100)
        self.update_plot2()

        self.canvas3 = MplCanvas(self, width=5, height=4, dpi=100)
        self.update_plot3()
        
        self.verticalLayout.addWidget(self.canvas)
        self.verticalLayout.addWidget(self.canvas2)
        self.verticalLayout.addWidget(self.canvas3)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

        #Timers
        self.thread = QThread()
        self.thread.start()

        
        
        self.timer = QTimer()
        self.timer.setInterval(5000)
        self.timer.timeout.connect(self.updateBar)
        self.timer.start()

        self.timer1 = QtCore.QTimer()
        self.timer1.setInterval(500)
        self.timer1.timeout.connect(self.update_plots)
        self.timer1.start()
        self.openLogin()




    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.pushButton.setText(_translate("MainWindow", "Automatic"))
        self.pushButton_2.setText(_translate("MainWindow", "Manual"))
        self.toolButton.setText(_translate("MainWindow", "..."))
        self.toolButton_2.setText(_translate("MainWindow", "..."))
        self.toolButton_3.setText(_translate("MainWindow", "..."))
        self.toolButton_4.setText(_translate("MainWindow", "..."))
        self.menuCharts.setTitle(_translate("MainWindow", "Charts"))
        self.menuWeather.setTitle(_translate("MainWindow", "Weather"))
        self.actionWeather.setText(_translate("MainWindow", "External"))
        self.actionrightarrow.setText(_translate("MainWindow", "rightarrow"))
        self.actiontop_arrow.setText(_translate("MainWindow", "top arrow"))
        self.actionPower_Plot.setText(_translate("MainWindow", "Power Plot"))
        self.actionCurrent_Plot.setText(_translate("MainWindow", "Current Plot"))
        self.actionVoltage_Plot.setText(_translate("MainWindow", "Voltage Plot"))

    def update_plots(self):
        self.update_plot()
        self.update_plot2()
        self.update_plot3()

    def updateBar(self):
       
        self.progress.setValue((random.uniform(0,20)))
        self.progress2.setValue((random.uniform(0,20)))
        self.progress3.setValue((random.uniform(0,20)))
        self.progress4.setValue((random.uniform(-20,20)))
        self.progress5.setValue((random.uniform(-20,20)))
        self.progress6.setValue((random.uniform(-20,20)))

    
    def timers(self):
        self.timer = QTimer()
        self.timer.setInterval(5000)
        self.timer.timeout.connect(self.updateBar)
        self.timer.start()

    def update_plot(self):
        
        if(self.n_data<20):
                self.n_data+=1
                self.xdata = list(range(self.n_data))
                self.ydata = self.ydata+ [random.randint(8, 12)]
        else:
                self.ydata = self.ydata[1:] + [random.randint(8, 12)]
        self.canvas.axes.cla()  # Clear the canvas.
        self.canvas.axes.plot(self.xdata, self.ydata, '#d4f542')
        # Trigger the canvas to update and redraw.
        self.canvas.draw()
    
    def update_plot2(self):
      
        if(self.n_data<20):
               pass #would increment
        else:
                self.ydata = self.ydata[1:] + [random.randint(8, 12)]
        self.canvas2.axes.cla()  # Clear the canvas.
        self.canvas2.axes.plot(self.xdata, self.ydata, '#42f5e3')
        # Trigger the canvas to update and redraw.
        self.canvas2.draw()
    
    def update_plot3(self):
       
        if(self.n_data<20):
                pass#would increment
        else:
                self.ydata = self.ydata[1:] + [random.randint(8, 12)]
        self.canvas3.axes.cla()  # Clear the canvas.
        self.canvas3.axes.plot(self.xdata, self.ydata, '#7e42f5')
        # Trigger the canvas to update and redraw.
        self.canvas3.draw()

    def automaticButton(self):
        self.pushButton.setEnabled(False)
        self.pushButton_2.setEnabled(True)
        self.toolButton.setEnabled(False)
        self.toolButton_2.setEnabled(False)
        self.toolButton_3.setEnabled(False)
        self.toolButton_4.setEnabled(False)
        global stop_threads
        stop_threads=False
        
        

    def manualButton(self):
        self.pushButton.setEnabled(True)
        self.pushButton_2.setEnabled(False)
        self.toolButton.setEnabled(True)
        self.toolButton_2.setEnabled(True)
        self.toolButton_3.setEnabled(True)
        self.toolButton_4.setEnabled(True)
        global stop_threads 
        stop_threads=True
    def topArrow(self):
        print("tilt up")

    def downArrow(self):
        print("tilt down")

    def rightArrow(self):
        print("rotate ccw")
    
    def leftArrow(self):
        print("rotate cw")
    def openLogin(self):
        self.window =QtWidgets.QMainWindow()
        self.ui = Ui_LoginWindow()
        self.ui.setupUi(self.window,MainWindow)
        self.window.show()
    def weather(self):
        print("weather")
        webbrowser.open('https://www.theweathernetwork.com/ca/weather/ontario/ottawa')

# multi threading

def run(self):
        while True:
                

                while (stop_threads):
                        time.sleep(1)
                time.sleep(1)
                print("["+str(datetime.datetime.now())+"]"+ "thread running")
                


                

if __name__ == "__main__":
    
    import sys
    
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    
    sys.exit(app.exec_())
